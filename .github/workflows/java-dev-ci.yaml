name: dev ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build_test:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

  #     - name: Cache Gradle packages
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-

      - name: Package
        run: mvn package

  # package_docker:
  #   runs-on: [self-hosted, linux]
  #   needs:
  #     - build_test
  #   steps:
  #     - name: Download build
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build

  #     - name: Docker image name env
  #       run: |
  #         echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_SHA::8}" >> $GITHUB_ENV
  #         # echo "GITLAB_IMAGE_NAME=registry.gitlab.com/target-digital-transformation/df/dynamic-catalog-service/github:${GITHUB_SHA::8}" >> $GITHUB_ENV

  #     - name: Build docker image
  #       # permission change due to: actions/upload-artifact#38
  #       run: |


  #     - name: Push image to github container registry
  #       run: |
  #         echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ secrets.CR_USER }} --password-stdin
  #         docker push $IMAGE_NAME

  #     - name: Push image to gitlab registry
  #       run: |
  #         echo ${{ secrets.GITLAB_CR_PAT }} | docker login registry.gitlab.com -u ${{ secrets.GITLAB_CR_USER }} --password-stdin
  #         docker tag $IMAGE_NAME $GITLAB_IMAGE_NAME
  #         docker push $GITLAB_IMAGE_NAME

  # deploy_to_dev:
  #   runs-on: [self-hosted, linux]
  #   needs:
  #     - package_docker
  #   steps:
  #     - name: Push to ArgoCD
  #       run: |
  #         echo "TODO"
  #         echo "$IMAGE_NAME"
  #         echo "$GITLAB_IMAGE_NAME"
  #         echo ${{ env.IMAGE_NAME }}
  #         echo ${{ env.GITLAB_IMAGE_NAME }}
